{
  // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "html:template": {
    "prefix": "html:template",
    "body": "<template>$0</template>"
  },
  "script:ts-name": {
    "prefix": "scripts:ts-name",
    "body": ["<script lang=\"ts\">", "export default {", "\tname: '$0',", "}", "</script>"]
  },
  "script:ts-setup": {
    "prefix": "script:ts-setup",
    "body": ["<script setup lang=\"ts\">", "</script>"]
  },
  "_vueinit": {
    "prefix": "_vueinit",
    "body": [
      "<template>",
      "\t<div></div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from '@nuxtjs/composition-api'",
      "",
      "export default defineComponent({",
      "\tsetup() {",
      "\t\treturn {}",
      "\t},",
      "})",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>"
    ]
  },
  "nuxt:init": {
    "prefix": "nuxt:init",
    "body": [
      "<template>",
      "\t<div class=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}\">",
      "\t\t$0",
      "\t</div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from '@nuxtjs/composition-api'",
      "export default defineComponent({",
      "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}',",
      "\tsetup() {",
      "\t\treturn {}",
      "\t},",
      "})",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>"
    ]
  },
  "vue:init": {
    "prefix": "vue:init",
    "body": [
      "<template>",
      "\t<div class=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}\">$0</div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from '@vue/composition-api'",
      "",
      "export default defineComponent({",
      "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}',",
      "\tsetup() {",
      "\t\treturn {}",
      "\t},",
      "})",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>"
    ]
  },
  "vue3:init": {
    "prefix": "vue3:init",
    "body": [
      "<script setup lang=\"ts\">",
      "</script>",
      "",
      "<script lang=\"ts\">",
      "export default {",
      "  name: '$0',",
      "}",
      "</script>",
      "",
      "<template>",
      "\t<div></div>",
      "</template>",
      "",
      "<style lang=\"scss\" scoped></style>",
      ""
    ]
  },
  "script:js": {
    "prefix": "script:js",
    "body": ["<script>", "export default {", "\t$0", "}", "</script>"]
  },
  "script:js-with-name": {
    "prefix": "script:js-with-name",
    "body": [
      "<script>",
      "export default {",
      "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}'",
      "\t$0",
      "}",
      "</script>"
    ]
  },
  "style:scss": {
    "prefix": "style:scss",
    "body": ["<style lang=\"scss\">", "$0", "</style>"]
  },
  "style:scss-scoped": {
    "prefix": "style:scss-scoped",
    "body": ["<style lang=\"scss\" scoped>", "$0", "</style>"]
  },
  "vue:scss-scoped": {
    "prefix": "vue:scss-scoped",
    "body": [
      "<template>",
      "\t<div class=\"${TM_FILENAME_BASE}\">$0</div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}',",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>"
    ]
  },
  "vue:scss-scoped-custom": {
    "prefix": "vue:scss-scoped-custom",
    "body": [
      "<template>",
      "\t<div class=\"${1:${TM_FILENAME_BASE}}\">$0</div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "\tname: '${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}',",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>"
    ]
  },
  "options:asyncData": {
    "prefix": "options:asyncData",
    "body": ["async asyncData() {", "$0", "},"]
  }
}
